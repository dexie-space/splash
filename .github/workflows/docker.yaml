name: Build and push image

#on:
#  workflow_dispatch:
#  release:
#    types: [created]
on:
  push:
    branches:
      - mpw/dockerfile

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  release:
    runs-on: "${{ matrix.os }}"
    strategy:
      matrix:
        include:
          - os: macos-latest-xlarge
            arch: arm64
          - os: ubuntu-latest
            arch: amd64
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - run: |
          docker context create ci
          docker context use ci
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          endpoint: ci
      - name: Build and push ${{ github.event.repository.name }}
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          provenance: false
          platforms: linux/${{ matrix.arch }}
          tags: ${{ github.event.repository.name}}:latest-${{ matrix.arch }}
          cache-from: type=gha,scope=${{ github.ref}}-${{ matrix.arch }}
          cache-to: type=gha,scope=${{ github.ref}}-${{ matrix.arch }},mode=max

  finalize:
    needs: build
    runs-on: ubuntu-latest
    environment: release
    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Merge image tags
        uses: Noelware/docker-manifest-action@master
        with:
          inputs: ${{ github.event.repository.name }}:latest,${{ env.DOCKERHUB_REPO }}:${{ github.sha }}
          images: ${{ github.event.repository.name }}:latest-amd64,${{ env.DOCKERHUB_REPO }}:latest-arm64
          push: true
